//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Context", "Task_Favorite", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Task), "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Favorite), true)]
[assembly: EdmRelationshipAttribute("Context", "User_Favorite", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "Favorites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Favorite), true)]
[assembly: EdmRelationshipAttribute("Context", "User_GlobalHookKey", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "GlobalHookKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.GlobalHookKey), true)]
[assembly: EdmRelationshipAttribute("Context", "NoteGroup_Note", "NoteGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.NoteGroup), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Note), true)]
[assembly: EdmRelationshipAttribute("Context", "User_Note", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "Note", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Note), true)]
[assembly: EdmRelationshipAttribute("Context", "Task_Perfomer", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Task), "Perfomers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Perfomer), true)]
[assembly: EdmRelationshipAttribute("Context", "User_Perfomer", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "Perfomers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Perfomer), true)]
[assembly: EdmRelationshipAttribute("Context", "Project_Task", "Projects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Project), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Task), true)]
[assembly: EdmRelationshipAttribute("Context", "Role_User", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.User), true)]
[assembly: EdmRelationshipAttribute("Context", "Setting_User", "Settings", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Setting), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.User), true)]
[assembly: EdmRelationshipAttribute("Context", "Task_TaskComment", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Task), "TaskComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.TaskComment), true)]
[assembly: EdmRelationshipAttribute("Context", "User_TaskComment", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "TaskComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.TaskComment), true)]
[assembly: EdmRelationshipAttribute("Context", "Task_TaskFile", "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Task), "TaskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.TaskFile), true)]
[assembly: EdmRelationshipAttribute("Context", "User_TaskFile", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "TaskFiles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.TaskFile), true)]
[assembly: EdmRelationshipAttribute("Context", "User_Task", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "Tasks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Task), true)]
[assembly: EdmRelationshipAttribute("Context", "User_NoteGroup", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.User), "NoteGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.NoteGroup), true)]
[assembly: EdmRelationshipAttribute("Context", "TaskStage", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Task), "Stage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Stage), true)]
[assembly: EdmRelationshipAttribute("Context", "PerfomerStage", "Perfomer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NTW.Data.Context.Perfomer), "Stage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NTW.Data.Context.Stage), true)]

#endregion

namespace NTW.Data.Context
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBContext object using the connection string found in the 'DBContext' section of the application configuration file.
        /// </summary>
        public DBContext() : base("name=DBContext", "DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBContext object.
        /// </summary>
        public DBContext(string connectionString) : base(connectionString, "DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBContext object.
        /// </summary>
        public DBContext(EntityConnection connection) : base(connection, "DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppStarter> AppStarters
        {
            get
            {
                if ((_AppStarters == null))
                {
                    _AppStarters = base.CreateObjectSet<AppStarter>("AppStarters");
                }
                return _AppStarters;
            }
        }
        private ObjectSet<AppStarter> _AppStarters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Favorite> Favorites
        {
            get
            {
                if ((_Favorites == null))
                {
                    _Favorites = base.CreateObjectSet<Favorite>("Favorites");
                }
                return _Favorites;
            }
        }
        private ObjectSet<Favorite> _Favorites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalHookKey> GlobalHookKeys
        {
            get
            {
                if ((_GlobalHookKeys == null))
                {
                    _GlobalHookKeys = base.CreateObjectSet<GlobalHookKey>("GlobalHookKeys");
                }
                return _GlobalHookKeys;
            }
        }
        private ObjectSet<GlobalHookKey> _GlobalHookKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Journal> Journals
        {
            get
            {
                if ((_Journals == null))
                {
                    _Journals = base.CreateObjectSet<Journal>("Journals");
                }
                return _Journals;
            }
        }
        private ObjectSet<Journal> _Journals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Note> Notes
        {
            get
            {
                if ((_Notes == null))
                {
                    _Notes = base.CreateObjectSet<Note>("Notes");
                }
                return _Notes;
            }
        }
        private ObjectSet<Note> _Notes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NoteGroup> NoteGroups
        {
            get
            {
                if ((_NoteGroups == null))
                {
                    _NoteGroups = base.CreateObjectSet<NoteGroup>("NoteGroups");
                }
                return _NoteGroups;
            }
        }
        private ObjectSet<NoteGroup> _NoteGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Perfomer> Perfomers
        {
            get
            {
                if ((_Perfomers == null))
                {
                    _Perfomers = base.CreateObjectSet<Perfomer>("Perfomers");
                }
                return _Perfomers;
            }
        }
        private ObjectSet<Perfomer> _Perfomers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stage> Stages
        {
            get
            {
                if ((_Stages == null))
                {
                    _Stages = base.CreateObjectSet<Stage>("Stages");
                }
                return _Stages;
            }
        }
        private ObjectSet<Stage> _Stages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StartProcess> StartProcesses
        {
            get
            {
                if ((_StartProcesses == null))
                {
                    _StartProcesses = base.CreateObjectSet<StartProcess>("StartProcesses");
                }
                return _StartProcesses;
            }
        }
        private ObjectSet<StartProcess> _StartProcesses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskComment> TaskComments
        {
            get
            {
                if ((_TaskComments == null))
                {
                    _TaskComments = base.CreateObjectSet<TaskComment>("TaskComments");
                }
                return _TaskComments;
            }
        }
        private ObjectSet<TaskComment> _TaskComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskFile> TaskFiles
        {
            get
            {
                if ((_TaskFiles == null))
                {
                    _TaskFiles = base.CreateObjectSet<TaskFile>("TaskFiles");
                }
                return _TaskFiles;
            }
        }
        private ObjectSet<TaskFile> _TaskFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrackingState> TrackingStates
        {
            get
            {
                if ((_TrackingStates == null))
                {
                    _TrackingStates = base.CreateObjectSet<TrackingState>("TrackingStates");
                }
                return _TrackingStates;
            }
        }
        private ObjectSet<TrackingState> _TrackingStates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppStarters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppStarters(AppStarter appStarter)
        {
            base.AddObject("AppStarters", appStarter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Favorites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFavorites(Favorite favorite)
        {
            base.AddObject("Favorites", favorite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalHookKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalHookKeys(GlobalHookKey globalHookKey)
        {
            base.AddObject("GlobalHookKeys", globalHookKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Journals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJournals(Journal journal)
        {
            base.AddObject("Journals", journal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotes(Note note)
        {
            base.AddObject("Notes", note);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NoteGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNoteGroups(NoteGroup noteGroup)
        {
            base.AddObject("NoteGroups", noteGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Perfomers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerfomers(Perfomer perfomer)
        {
            base.AddObject("Perfomers", perfomer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStages(Stage stage)
        {
            base.AddObject("Stages", stage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StartProcesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStartProcesses(StartProcess startProcess)
        {
            base.AddObject("StartProcesses", startProcess);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskComments(TaskComment taskComment)
        {
            base.AddObject("TaskComments", taskComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskFiles(TaskFile taskFile)
        {
            base.AddObject("TaskFiles", taskFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrackingStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrackingStates(TrackingState trackingState)
        {
            base.AddObject("TrackingStates", trackingState);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="AppStarter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppStarter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppStarter object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="format">Initial value of the Format property.</param>
        /// <param name="application">Initial value of the Application property.</param>
        public static AppStarter CreateAppStarter(global::System.Int32 id, global::System.String format, global::System.String application)
        {
            AppStarter appStarter = new AppStarter();
            appStarter.ID = id;
            appStarter.Format = format;
            appStarter.Application = application;
            return appStarter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Application
        {
            get
            {
                return _Application;
            }
            set
            {
                OnApplicationChanging(value);
                ReportPropertyChanging("Application");
                _Application = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Application");
                OnApplicationChanged();
            }
        }
        private global::System.String _Application;
        partial void OnApplicationChanging(global::System.String value);
        partial void OnApplicationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Favorite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Favorite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Favorite object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="iDTask">Initial value of the IDTask property.</param>
        public static Favorite CreateFavorite(global::System.Int32 id, global::System.Int32 iDUser, global::System.Int32 iDTask)
        {
            Favorite favorite = new Favorite();
            favorite.ID = id;
            favorite.IDUser = iDUser;
            favorite.IDTask = iDTask;
            return favorite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDTask
        {
            get
            {
                return _IDTask;
            }
            set
            {
                OnIDTaskChanging(value);
                ReportPropertyChanging("IDTask");
                _IDTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDTask");
                OnIDTaskChanged();
            }
        }
        private global::System.Int32 _IDTask;
        partial void OnIDTaskChanging(global::System.Int32 value);
        partial void OnIDTaskChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_Favorite", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_Favorite", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_Favorite", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_Favorite", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("Context.Task_Favorite", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Favorite", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Favorite", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Favorite", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Favorite", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_Favorite", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="GlobalHookKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalHookKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalHookKey object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="iDFucnk">Initial value of the IDFucnk property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        public static GlobalHookKey CreateGlobalHookKey(global::System.Int32 id, global::System.String key, global::System.Int32 iDFucnk, global::System.Int32 iDUser)
        {
            GlobalHookKey globalHookKey = new GlobalHookKey();
            globalHookKey.ID = id;
            globalHookKey.Key = key;
            globalHookKey.IDFucnk = iDFucnk;
            globalHookKey.IDUser = iDUser;
            return globalHookKey;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDFucnk
        {
            get
            {
                return _IDFucnk;
            }
            set
            {
                OnIDFucnkChanging(value);
                ReportPropertyChanging("IDFucnk");
                _IDFucnk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDFucnk");
                OnIDFucnkChanged();
            }
        }
        private global::System.Int32 _IDFucnk;
        partial void OnIDFucnkChanging(global::System.Int32 value);
        partial void OnIDFucnkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_GlobalHookKey", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_GlobalHookKey", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_GlobalHookKey", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_GlobalHookKey", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_GlobalHookKey", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Journal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Journal object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="typeMessage">Initial value of the TypeMessage property.</param>
        /// <param name="idUser">Initial value of the IdUser property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="valueMessage">Initial value of the ValueMessage property.</param>
        /// <param name="secondMessageValue">Initial value of the SecondMessageValue property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static Journal CreateJournal(global::System.Int32 id, global::System.Int32 typeMessage, global::System.Int32 idUser, global::System.String userName, global::System.String valueMessage, global::System.String secondMessageValue, global::System.DateTime createDate)
        {
            Journal journal = new Journal();
            journal.ID = id;
            journal.TypeMessage = typeMessage;
            journal.IdUser = idUser;
            journal.UserName = userName;
            journal.ValueMessage = valueMessage;
            journal.SecondMessageValue = secondMessageValue;
            journal.CreateDate = createDate;
            return journal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeMessage
        {
            get
            {
                return _TypeMessage;
            }
            set
            {
                OnTypeMessageChanging(value);
                ReportPropertyChanging("TypeMessage");
                _TypeMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeMessage");
                OnTypeMessageChanged();
            }
        }
        private global::System.Int32 _TypeMessage;
        partial void OnTypeMessageChanging(global::System.Int32 value);
        partial void OnTypeMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUser
        {
            get
            {
                return _IdUser;
            }
            set
            {
                OnIdUserChanging(value);
                ReportPropertyChanging("IdUser");
                _IdUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUser");
                OnIdUserChanged();
            }
        }
        private global::System.Int32 _IdUser;
        partial void OnIdUserChanging(global::System.Int32 value);
        partial void OnIdUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ValueMessage
        {
            get
            {
                return _ValueMessage;
            }
            set
            {
                OnValueMessageChanging(value);
                ReportPropertyChanging("ValueMessage");
                _ValueMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ValueMessage");
                OnValueMessageChanged();
            }
        }
        private global::System.String _ValueMessage;
        partial void OnValueMessageChanging(global::System.String value);
        partial void OnValueMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecondMessageValue
        {
            get
            {
                return _SecondMessageValue;
            }
            set
            {
                OnSecondMessageValueChanging(value);
                ReportPropertyChanging("SecondMessageValue");
                _SecondMessageValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecondMessageValue");
                OnSecondMessageValueChanged();
            }
        }
        private global::System.String _SecondMessageValue;
        partial void OnSecondMessageValueChanging(global::System.String value);
        partial void OnSecondMessageValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Note")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Note : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Note object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="owner">Initial value of the Owner property.</param>
        /// <param name="isShowin">Initial value of the IsShowin property.</param>
        /// <param name="posX">Initial value of the PosX property.</param>
        /// <param name="posY">Initial value of the PosY property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="iDColor">Initial value of the IDColor property.</param>
        /// <param name="rotateA">Initial value of the RotateA property.</param>
        /// <param name="zIndex">Initial value of the ZIndex property.</param>
        /// <param name="isTop">Initial value of the IsTop property.</param>
        public static Note CreateNote(global::System.Int32 id, global::System.String text, global::System.DateTime createDate, global::System.Int32 owner, global::System.Boolean isShowin, global::System.Int32 posX, global::System.Int32 posY, global::System.Int32 width, global::System.Int32 height, global::System.Int32 group, global::System.Int32 iDColor, global::System.Int32 rotateA, global::System.Int32 zIndex, global::System.Boolean isTop)
        {
            Note note = new Note();
            note.ID = id;
            note.Text = text;
            note.CreateDate = createDate;
            note.Owner = owner;
            note.IsShowin = isShowin;
            note.PosX = posX;
            note.PosY = posY;
            note.Width = width;
            note.Height = height;
            note.Group = group;
            note.IDColor = iDColor;
            note.RotateA = rotateA;
            note.ZIndex = zIndex;
            note.IsTop = isTop;
            return note;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private global::System.Int32 _Owner;
        partial void OnOwnerChanging(global::System.Int32 value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShowin
        {
            get
            {
                return _IsShowin;
            }
            set
            {
                OnIsShowinChanging(value);
                ReportPropertyChanging("IsShowin");
                _IsShowin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsShowin");
                OnIsShowinChanged();
            }
        }
        private global::System.Boolean _IsShowin;
        partial void OnIsShowinChanging(global::System.Boolean value);
        partial void OnIsShowinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PosX
        {
            get
            {
                return _PosX;
            }
            set
            {
                OnPosXChanging(value);
                ReportPropertyChanging("PosX");
                _PosX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PosX");
                OnPosXChanged();
            }
        }
        private global::System.Int32 _PosX;
        partial void OnPosXChanging(global::System.Int32 value);
        partial void OnPosXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PosY
        {
            get
            {
                return _PosY;
            }
            set
            {
                OnPosYChanging(value);
                ReportPropertyChanging("PosY");
                _PosY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PosY");
                OnPosYChanged();
            }
        }
        private global::System.Int32 _PosY;
        partial void OnPosYChanging(global::System.Int32 value);
        partial void OnPosYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int32 _Height;
        partial void OnHeightChanging(global::System.Int32 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.Int32 _Group;
        partial void OnGroupChanging(global::System.Int32 value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDColor
        {
            get
            {
                return _IDColor;
            }
            set
            {
                OnIDColorChanging(value);
                ReportPropertyChanging("IDColor");
                _IDColor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDColor");
                OnIDColorChanged();
            }
        }
        private global::System.Int32 _IDColor;
        partial void OnIDColorChanging(global::System.Int32 value);
        partial void OnIDColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RotateA
        {
            get
            {
                return _RotateA;
            }
            set
            {
                OnRotateAChanging(value);
                ReportPropertyChanging("RotateA");
                _RotateA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RotateA");
                OnRotateAChanged();
            }
        }
        private global::System.Int32 _RotateA;
        partial void OnRotateAChanging(global::System.Int32 value);
        partial void OnRotateAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZIndex
        {
            get
            {
                return _ZIndex;
            }
            set
            {
                OnZIndexChanging(value);
                ReportPropertyChanging("ZIndex");
                _ZIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZIndex");
                OnZIndexChanged();
            }
        }
        private global::System.Int32 _ZIndex;
        partial void OnZIndexChanging(global::System.Int32 value);
        partial void OnZIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTop
        {
            get
            {
                return _IsTop;
            }
            set
            {
                OnIsTopChanging(value);
                ReportPropertyChanging("IsTop");
                _IsTop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTop");
                OnIsTopChanged();
            }
        }
        private global::System.Boolean _IsTop;
        partial void OnIsTopChanging(global::System.Boolean value);
        partial void OnIsTopChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "NoteGroup_Note", "NoteGroup")]
        public NoteGroup NoteGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NoteGroup>("Context.NoteGroup_Note", "NoteGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NoteGroup>("Context.NoteGroup_Note", "NoteGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NoteGroup> NoteGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NoteGroup>("Context.NoteGroup_Note", "NoteGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NoteGroup>("Context.NoteGroup_Note", "NoteGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Note", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Note", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Note", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Note", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_Note", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="NoteGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NoteGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NoteGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="positionInList">Initial value of the PositionInList property.</param>
        /// <param name="iDColor">Initial value of the IDColor property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        public static NoteGroup CreateNoteGroup(global::System.Int32 id, global::System.String caption, global::System.Int32 positionInList, global::System.Int32 iDColor, global::System.Int32 iDUser)
        {
            NoteGroup noteGroup = new NoteGroup();
            noteGroup.ID = id;
            noteGroup.Caption = caption;
            noteGroup.PositionInList = positionInList;
            noteGroup.IDColor = iDColor;
            noteGroup.IDUser = iDUser;
            return noteGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionInList
        {
            get
            {
                return _PositionInList;
            }
            set
            {
                OnPositionInListChanging(value);
                ReportPropertyChanging("PositionInList");
                _PositionInList = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionInList");
                OnPositionInListChanged();
            }
        }
        private global::System.Int32 _PositionInList;
        partial void OnPositionInListChanging(global::System.Int32 value);
        partial void OnPositionInListChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDColor
        {
            get
            {
                return _IDColor;
            }
            set
            {
                OnIDColorChanging(value);
                ReportPropertyChanging("IDColor");
                _IDColor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDColor");
                OnIDColorChanged();
            }
        }
        private global::System.Int32 _IDColor;
        partial void OnIDColorChanging(global::System.Int32 value);
        partial void OnIDColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "NoteGroup_Note", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("Context.NoteGroup_Note", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("Context.NoteGroup_Note", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_NoteGroup", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_NoteGroup", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_NoteGroup", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_NoteGroup", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_NoteGroup", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Perfomer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Perfomer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Perfomer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDTask">Initial value of the IDTask property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="closeDate">Initial value of the CloseDate property.</param>
        /// <param name="personInCharge">Initial value of the PersonInCharge property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        public static Perfomer CreatePerfomer(global::System.Int32 id, global::System.Int32 iDTask, global::System.Int32 iDUser, global::System.Boolean state, global::System.DateTime closeDate, global::System.Boolean personInCharge, global::System.DateTime startDate)
        {
            Perfomer perfomer = new Perfomer();
            perfomer.ID = id;
            perfomer.IDTask = iDTask;
            perfomer.IDUser = iDUser;
            perfomer.State = state;
            perfomer.CloseDate = closeDate;
            perfomer.PersonInCharge = personInCharge;
            perfomer.StartDate = startDate;
            return perfomer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDTask
        {
            get
            {
                return _IDTask;
            }
            set
            {
                OnIDTaskChanging(value);
                ReportPropertyChanging("IDTask");
                _IDTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDTask");
                OnIDTaskChanged();
            }
        }
        private global::System.Int32 _IDTask;
        partial void OnIDTaskChanging(global::System.Int32 value);
        partial void OnIDTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Boolean _State;
        partial void OnStateChanging(global::System.Boolean value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CloseDate
        {
            get
            {
                return _CloseDate;
            }
            set
            {
                OnCloseDateChanging(value);
                ReportPropertyChanging("CloseDate");
                _CloseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseDate");
                OnCloseDateChanged();
            }
        }
        private global::System.DateTime _CloseDate;
        partial void OnCloseDateChanging(global::System.DateTime value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PersonInCharge
        {
            get
            {
                return _PersonInCharge;
            }
            set
            {
                OnPersonInChargeChanging(value);
                ReportPropertyChanging("PersonInCharge");
                _PersonInCharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonInCharge");
                OnPersonInChargeChanged();
            }
        }
        private global::System.Boolean _PersonInCharge;
        partial void OnPersonInChargeChanging(global::System.Boolean value);
        partial void OnPersonInChargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_Perfomer", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_Perfomer", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_Perfomer", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_Perfomer", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("Context.Task_Perfomer", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Perfomer", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Perfomer", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Perfomer", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Perfomer", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_Perfomer", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "PerfomerStage", "Stage")]
        public EntityCollection<Stage> Stages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stage>("Context.PerfomerStage", "Stage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stage>("Context.PerfomerStage", "Stage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="isDelete">Initial value of the IsDelete property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.String caption, global::System.Boolean isDelete, global::System.String description)
        {
            Project project = new Project();
            project.ID = id;
            project.Caption = caption;
            project.IsDelete = isDelete;
            project.Description = description;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Project_Task", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("Context.Project_Task", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("Context.Project_Task", "Tasks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="createTask">Initial value of the CreateTask property.</param>
        /// <param name="updateInfoTask">Initial value of the UpdateInfoTask property.</param>
        /// <param name="executionTask">Initial value of the ExecutionTask property.</param>
        /// <param name="deleteTask">Initial value of the DeleteTask property.</param>
        /// <param name="viewAllTask">Initial value of the ViewAllTask property.</param>
        /// <param name="reportExecuteTask">Initial value of the ReportExecuteTask property.</param>
        /// <param name="createUser">Initial value of the CreateUser property.</param>
        /// <param name="updateInfoUser">Initial value of the UpdateInfoUser property.</param>
        /// <param name="deleteUser">Initial value of the DeleteUser property.</param>
        /// <param name="createNewRole">Initial value of the CreateNewRole property.</param>
        /// <param name="updateRole">Initial value of the UpdateRole property.</param>
        /// <param name="deleteRole">Initial value of the DeleteRole property.</param>
        /// <param name="createSetting">Initial value of the CreateSetting property.</param>
        /// <param name="updateSetting">Initial value of the UpdateSetting property.</param>
        /// <param name="deleteSetting">Initial value of the DeleteSetting property.</param>
        /// <param name="isDelete">Initial value of the IsDelete property.</param>
        /// <param name="createProject">Initial value of the CreateProject property.</param>
        /// <param name="updateProject">Initial value of the UpdateProject property.</param>
        /// <param name="deleteProject">Initial value of the DeleteProject property.</param>
        /// <param name="restoreTask">Initial value of the RestoreTask property.</param>
        /// <param name="visibleJournal">Initial value of the VisibleJournal property.</param>
        /// <param name="restoreUser">Initial value of the RestoreUser property.</param>
        /// <param name="restoreRole">Initial value of the RestoreRole property.</param>
        /// <param name="restoreSetting">Initial value of the RestoreSetting property.</param>
        /// <param name="restoreProject">Initial value of the RestoreProject property.</param>
        /// <param name="allowCancellation">Initial value of the AllowCancellation property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String roleName, global::System.Boolean createTask, global::System.Boolean updateInfoTask, global::System.Boolean executionTask, global::System.Boolean deleteTask, global::System.Boolean viewAllTask, global::System.Boolean reportExecuteTask, global::System.Boolean createUser, global::System.Boolean updateInfoUser, global::System.Boolean deleteUser, global::System.Boolean createNewRole, global::System.Boolean updateRole, global::System.Boolean deleteRole, global::System.Boolean createSetting, global::System.Boolean updateSetting, global::System.Boolean deleteSetting, global::System.Boolean isDelete, global::System.Boolean createProject, global::System.Boolean updateProject, global::System.Boolean deleteProject, global::System.Boolean restoreTask, global::System.Boolean visibleJournal, global::System.Boolean restoreUser, global::System.Boolean restoreRole, global::System.Boolean restoreSetting, global::System.Boolean restoreProject, global::System.Boolean allowCancellation)
        {
            Role role = new Role();
            role.ID = id;
            role.RoleName = roleName;
            role.CreateTask = createTask;
            role.UpdateInfoTask = updateInfoTask;
            role.ExecutionTask = executionTask;
            role.DeleteTask = deleteTask;
            role.ViewAllTask = viewAllTask;
            role.ReportExecuteTask = reportExecuteTask;
            role.CreateUser = createUser;
            role.UpdateInfoUser = updateInfoUser;
            role.DeleteUser = deleteUser;
            role.CreateNewRole = createNewRole;
            role.UpdateRole = updateRole;
            role.DeleteRole = deleteRole;
            role.CreateSetting = createSetting;
            role.UpdateSetting = updateSetting;
            role.DeleteSetting = deleteSetting;
            role.IsDelete = isDelete;
            role.CreateProject = createProject;
            role.UpdateProject = updateProject;
            role.DeleteProject = deleteProject;
            role.RestoreTask = restoreTask;
            role.VisibleJournal = visibleJournal;
            role.RestoreUser = restoreUser;
            role.RestoreRole = restoreRole;
            role.RestoreSetting = restoreSetting;
            role.RestoreProject = restoreProject;
            role.AllowCancellation = allowCancellation;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CreateTask
        {
            get
            {
                return _CreateTask;
            }
            set
            {
                OnCreateTaskChanging(value);
                ReportPropertyChanging("CreateTask");
                _CreateTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTask");
                OnCreateTaskChanged();
            }
        }
        private global::System.Boolean _CreateTask;
        partial void OnCreateTaskChanging(global::System.Boolean value);
        partial void OnCreateTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UpdateInfoTask
        {
            get
            {
                return _UpdateInfoTask;
            }
            set
            {
                OnUpdateInfoTaskChanging(value);
                ReportPropertyChanging("UpdateInfoTask");
                _UpdateInfoTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateInfoTask");
                OnUpdateInfoTaskChanged();
            }
        }
        private global::System.Boolean _UpdateInfoTask;
        partial void OnUpdateInfoTaskChanging(global::System.Boolean value);
        partial void OnUpdateInfoTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExecutionTask
        {
            get
            {
                return _ExecutionTask;
            }
            set
            {
                OnExecutionTaskChanging(value);
                ReportPropertyChanging("ExecutionTask");
                _ExecutionTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecutionTask");
                OnExecutionTaskChanged();
            }
        }
        private global::System.Boolean _ExecutionTask;
        partial void OnExecutionTaskChanging(global::System.Boolean value);
        partial void OnExecutionTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DeleteTask
        {
            get
            {
                return _DeleteTask;
            }
            set
            {
                OnDeleteTaskChanging(value);
                ReportPropertyChanging("DeleteTask");
                _DeleteTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteTask");
                OnDeleteTaskChanged();
            }
        }
        private global::System.Boolean _DeleteTask;
        partial void OnDeleteTaskChanging(global::System.Boolean value);
        partial void OnDeleteTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ViewAllTask
        {
            get
            {
                return _ViewAllTask;
            }
            set
            {
                OnViewAllTaskChanging(value);
                ReportPropertyChanging("ViewAllTask");
                _ViewAllTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewAllTask");
                OnViewAllTaskChanged();
            }
        }
        private global::System.Boolean _ViewAllTask;
        partial void OnViewAllTaskChanging(global::System.Boolean value);
        partial void OnViewAllTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReportExecuteTask
        {
            get
            {
                return _ReportExecuteTask;
            }
            set
            {
                OnReportExecuteTaskChanging(value);
                ReportPropertyChanging("ReportExecuteTask");
                _ReportExecuteTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportExecuteTask");
                OnReportExecuteTaskChanged();
            }
        }
        private global::System.Boolean _ReportExecuteTask;
        partial void OnReportExecuteTaskChanging(global::System.Boolean value);
        partial void OnReportExecuteTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CreateUser
        {
            get
            {
                return _CreateUser;
            }
            set
            {
                OnCreateUserChanging(value);
                ReportPropertyChanging("CreateUser");
                _CreateUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateUser");
                OnCreateUserChanged();
            }
        }
        private global::System.Boolean _CreateUser;
        partial void OnCreateUserChanging(global::System.Boolean value);
        partial void OnCreateUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UpdateInfoUser
        {
            get
            {
                return _UpdateInfoUser;
            }
            set
            {
                OnUpdateInfoUserChanging(value);
                ReportPropertyChanging("UpdateInfoUser");
                _UpdateInfoUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateInfoUser");
                OnUpdateInfoUserChanged();
            }
        }
        private global::System.Boolean _UpdateInfoUser;
        partial void OnUpdateInfoUserChanging(global::System.Boolean value);
        partial void OnUpdateInfoUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DeleteUser
        {
            get
            {
                return _DeleteUser;
            }
            set
            {
                OnDeleteUserChanging(value);
                ReportPropertyChanging("DeleteUser");
                _DeleteUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteUser");
                OnDeleteUserChanged();
            }
        }
        private global::System.Boolean _DeleteUser;
        partial void OnDeleteUserChanging(global::System.Boolean value);
        partial void OnDeleteUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CreateNewRole
        {
            get
            {
                return _CreateNewRole;
            }
            set
            {
                OnCreateNewRoleChanging(value);
                ReportPropertyChanging("CreateNewRole");
                _CreateNewRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateNewRole");
                OnCreateNewRoleChanged();
            }
        }
        private global::System.Boolean _CreateNewRole;
        partial void OnCreateNewRoleChanging(global::System.Boolean value);
        partial void OnCreateNewRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UpdateRole
        {
            get
            {
                return _UpdateRole;
            }
            set
            {
                OnUpdateRoleChanging(value);
                ReportPropertyChanging("UpdateRole");
                _UpdateRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateRole");
                OnUpdateRoleChanged();
            }
        }
        private global::System.Boolean _UpdateRole;
        partial void OnUpdateRoleChanging(global::System.Boolean value);
        partial void OnUpdateRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DeleteRole
        {
            get
            {
                return _DeleteRole;
            }
            set
            {
                OnDeleteRoleChanging(value);
                ReportPropertyChanging("DeleteRole");
                _DeleteRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteRole");
                OnDeleteRoleChanged();
            }
        }
        private global::System.Boolean _DeleteRole;
        partial void OnDeleteRoleChanging(global::System.Boolean value);
        partial void OnDeleteRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CreateSetting
        {
            get
            {
                return _CreateSetting;
            }
            set
            {
                OnCreateSettingChanging(value);
                ReportPropertyChanging("CreateSetting");
                _CreateSetting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateSetting");
                OnCreateSettingChanged();
            }
        }
        private global::System.Boolean _CreateSetting;
        partial void OnCreateSettingChanging(global::System.Boolean value);
        partial void OnCreateSettingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UpdateSetting
        {
            get
            {
                return _UpdateSetting;
            }
            set
            {
                OnUpdateSettingChanging(value);
                ReportPropertyChanging("UpdateSetting");
                _UpdateSetting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateSetting");
                OnUpdateSettingChanged();
            }
        }
        private global::System.Boolean _UpdateSetting;
        partial void OnUpdateSettingChanging(global::System.Boolean value);
        partial void OnUpdateSettingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DeleteSetting
        {
            get
            {
                return _DeleteSetting;
            }
            set
            {
                OnDeleteSettingChanging(value);
                ReportPropertyChanging("DeleteSetting");
                _DeleteSetting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteSetting");
                OnDeleteSettingChanged();
            }
        }
        private global::System.Boolean _DeleteSetting;
        partial void OnDeleteSettingChanging(global::System.Boolean value);
        partial void OnDeleteSettingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CreateProject
        {
            get
            {
                return _CreateProject;
            }
            set
            {
                OnCreateProjectChanging(value);
                ReportPropertyChanging("CreateProject");
                _CreateProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateProject");
                OnCreateProjectChanged();
            }
        }
        private global::System.Boolean _CreateProject;
        partial void OnCreateProjectChanging(global::System.Boolean value);
        partial void OnCreateProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UpdateProject
        {
            get
            {
                return _UpdateProject;
            }
            set
            {
                OnUpdateProjectChanging(value);
                ReportPropertyChanging("UpdateProject");
                _UpdateProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateProject");
                OnUpdateProjectChanged();
            }
        }
        private global::System.Boolean _UpdateProject;
        partial void OnUpdateProjectChanging(global::System.Boolean value);
        partial void OnUpdateProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DeleteProject
        {
            get
            {
                return _DeleteProject;
            }
            set
            {
                OnDeleteProjectChanging(value);
                ReportPropertyChanging("DeleteProject");
                _DeleteProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeleteProject");
                OnDeleteProjectChanged();
            }
        }
        private global::System.Boolean _DeleteProject;
        partial void OnDeleteProjectChanging(global::System.Boolean value);
        partial void OnDeleteProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RestoreTask
        {
            get
            {
                return _RestoreTask;
            }
            set
            {
                OnRestoreTaskChanging(value);
                ReportPropertyChanging("RestoreTask");
                _RestoreTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestoreTask");
                OnRestoreTaskChanged();
            }
        }
        private global::System.Boolean _RestoreTask;
        partial void OnRestoreTaskChanging(global::System.Boolean value);
        partial void OnRestoreTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean VisibleJournal
        {
            get
            {
                return _VisibleJournal;
            }
            set
            {
                OnVisibleJournalChanging(value);
                ReportPropertyChanging("VisibleJournal");
                _VisibleJournal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibleJournal");
                OnVisibleJournalChanged();
            }
        }
        private global::System.Boolean _VisibleJournal;
        partial void OnVisibleJournalChanging(global::System.Boolean value);
        partial void OnVisibleJournalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RestoreUser
        {
            get
            {
                return _RestoreUser;
            }
            set
            {
                OnRestoreUserChanging(value);
                ReportPropertyChanging("RestoreUser");
                _RestoreUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestoreUser");
                OnRestoreUserChanged();
            }
        }
        private global::System.Boolean _RestoreUser;
        partial void OnRestoreUserChanging(global::System.Boolean value);
        partial void OnRestoreUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RestoreRole
        {
            get
            {
                return _RestoreRole;
            }
            set
            {
                OnRestoreRoleChanging(value);
                ReportPropertyChanging("RestoreRole");
                _RestoreRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestoreRole");
                OnRestoreRoleChanged();
            }
        }
        private global::System.Boolean _RestoreRole;
        partial void OnRestoreRoleChanging(global::System.Boolean value);
        partial void OnRestoreRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RestoreSetting
        {
            get
            {
                return _RestoreSetting;
            }
            set
            {
                OnRestoreSettingChanging(value);
                ReportPropertyChanging("RestoreSetting");
                _RestoreSetting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestoreSetting");
                OnRestoreSettingChanged();
            }
        }
        private global::System.Boolean _RestoreSetting;
        partial void OnRestoreSettingChanging(global::System.Boolean value);
        partial void OnRestoreSettingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RestoreProject
        {
            get
            {
                return _RestoreProject;
            }
            set
            {
                OnRestoreProjectChanging(value);
                ReportPropertyChanging("RestoreProject");
                _RestoreProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestoreProject");
                OnRestoreProjectChanged();
            }
        }
        private global::System.Boolean _RestoreProject;
        partial void OnRestoreProjectChanging(global::System.Boolean value);
        partial void OnRestoreProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowCancellation
        {
            get
            {
                return _AllowCancellation;
            }
            set
            {
                OnAllowCancellationChanging(value);
                ReportPropertyChanging("AllowCancellation");
                _AllowCancellation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowCancellation");
                OnAllowCancellationChanged();
            }
        }
        private global::System.Boolean _AllowCancellation;
        partial void OnAllowCancellationChanging(global::System.Boolean value);
        partial void OnAllowCancellationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Role_User", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Context.Role_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Context.Role_User", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="useAnimation">Initial value of the UseAnimation property.</param>
        /// <param name="isDelete">Initial value of the IsDelete property.</param>
        /// <param name="alwaysSpecifyAPlaceToDdownload">Initial value of the AlwaysSpecifyAPlaceToDdownload property.</param>
        /// <param name="exitCheck">Initial value of the ExitCheck property.</param>
        /// <param name="monitorUserActions">Initial value of the MonitorUserActions property.</param>
        /// <param name="useGlobalHookKeys">Initial value of the UseGlobalHookKeys property.</param>
        public static Setting CreateSetting(global::System.Int32 id, global::System.String caption, global::System.Boolean useAnimation, global::System.Boolean isDelete, global::System.Boolean alwaysSpecifyAPlaceToDdownload, global::System.Boolean exitCheck, global::System.Boolean monitorUserActions, global::System.Boolean useGlobalHookKeys)
        {
            Setting setting = new Setting();
            setting.ID = id;
            setting.Caption = caption;
            setting.UseAnimation = useAnimation;
            setting.IsDelete = isDelete;
            setting.AlwaysSpecifyAPlaceToDdownload = alwaysSpecifyAPlaceToDdownload;
            setting.ExitCheck = exitCheck;
            setting.MonitorUserActions = monitorUserActions;
            setting.UseGlobalHookKeys = useGlobalHookKeys;
            return setting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseAnimation
        {
            get
            {
                return _UseAnimation;
            }
            set
            {
                OnUseAnimationChanging(value);
                ReportPropertyChanging("UseAnimation");
                _UseAnimation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseAnimation");
                OnUseAnimationChanged();
            }
        }
        private global::System.Boolean _UseAnimation;
        partial void OnUseAnimationChanging(global::System.Boolean value);
        partial void OnUseAnimationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlwaysSpecifyAPlaceToDdownload
        {
            get
            {
                return _AlwaysSpecifyAPlaceToDdownload;
            }
            set
            {
                OnAlwaysSpecifyAPlaceToDdownloadChanging(value);
                ReportPropertyChanging("AlwaysSpecifyAPlaceToDdownload");
                _AlwaysSpecifyAPlaceToDdownload = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlwaysSpecifyAPlaceToDdownload");
                OnAlwaysSpecifyAPlaceToDdownloadChanged();
            }
        }
        private global::System.Boolean _AlwaysSpecifyAPlaceToDdownload;
        partial void OnAlwaysSpecifyAPlaceToDdownloadChanging(global::System.Boolean value);
        partial void OnAlwaysSpecifyAPlaceToDdownloadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExitCheck
        {
            get
            {
                return _ExitCheck;
            }
            set
            {
                OnExitCheckChanging(value);
                ReportPropertyChanging("ExitCheck");
                _ExitCheck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExitCheck");
                OnExitCheckChanged();
            }
        }
        private global::System.Boolean _ExitCheck;
        partial void OnExitCheckChanging(global::System.Boolean value);
        partial void OnExitCheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MonitorUserActions
        {
            get
            {
                return _MonitorUserActions;
            }
            set
            {
                OnMonitorUserActionsChanging(value);
                ReportPropertyChanging("MonitorUserActions");
                _MonitorUserActions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonitorUserActions");
                OnMonitorUserActionsChanged();
            }
        }
        private global::System.Boolean _MonitorUserActions;
        partial void OnMonitorUserActionsChanging(global::System.Boolean value);
        partial void OnMonitorUserActionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseGlobalHookKeys
        {
            get
            {
                return _UseGlobalHookKeys;
            }
            set
            {
                OnUseGlobalHookKeysChanging(value);
                ReportPropertyChanging("UseGlobalHookKeys");
                _UseGlobalHookKeys = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseGlobalHookKeys");
                OnUseGlobalHookKeysChanged();
            }
        }
        private global::System.Boolean _UseGlobalHookKeys;
        partial void OnUseGlobalHookKeysChanging(global::System.Boolean value);
        partial void OnUseGlobalHookKeysChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Setting_User", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Context.Setting_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Context.Setting_User", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Stage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="idTask">Initial value of the IdTask property.</param>
        /// <param name="idPerfomer">Initial value of the IdPerfomer property.</param>
        /// <param name="stateStage">Initial value of the StateStage property.</param>
        /// <param name="deadLine">Initial value of the DeadLine property.</param>
        /// <param name="infinityDeadLine">Initial value of the InfinityDeadLine property.</param>
        public static Stage CreateStage(global::System.Int32 id, global::System.String caption, global::System.Int32 idTask, global::System.Int32 idPerfomer, global::System.Int32 stateStage, global::System.DateTime deadLine, global::System.Boolean infinityDeadLine)
        {
            Stage stage = new Stage();
            stage.ID = id;
            stage.Caption = caption;
            stage.IdTask = idTask;
            stage.IdPerfomer = idPerfomer;
            stage.StateStage = stateStage;
            stage.DeadLine = deadLine;
            stage.InfinityDeadLine = infinityDeadLine;
            return stage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTask
        {
            get
            {
                return _IdTask;
            }
            set
            {
                OnIdTaskChanging(value);
                ReportPropertyChanging("IdTask");
                _IdTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdTask");
                OnIdTaskChanged();
            }
        }
        private global::System.Int32 _IdTask;
        partial void OnIdTaskChanging(global::System.Int32 value);
        partial void OnIdTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPerfomer
        {
            get
            {
                return _IdPerfomer;
            }
            set
            {
                OnIdPerfomerChanging(value);
                ReportPropertyChanging("IdPerfomer");
                _IdPerfomer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPerfomer");
                OnIdPerfomerChanged();
            }
        }
        private global::System.Int32 _IdPerfomer;
        partial void OnIdPerfomerChanging(global::System.Int32 value);
        partial void OnIdPerfomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateStage
        {
            get
            {
                return _StateStage;
            }
            set
            {
                OnStateStageChanging(value);
                ReportPropertyChanging("StateStage");
                _StateStage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateStage");
                OnStateStageChanged();
            }
        }
        private global::System.Int32 _StateStage;
        partial void OnStateStageChanging(global::System.Int32 value);
        partial void OnStateStageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeadLine
        {
            get
            {
                return _DeadLine;
            }
            set
            {
                OnDeadLineChanging(value);
                ReportPropertyChanging("DeadLine");
                _DeadLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeadLine");
                OnDeadLineChanged();
            }
        }
        private global::System.DateTime _DeadLine;
        partial void OnDeadLineChanging(global::System.DateTime value);
        partial void OnDeadLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InfinityDeadLine
        {
            get
            {
                return _InfinityDeadLine;
            }
            set
            {
                OnInfinityDeadLineChanging(value);
                ReportPropertyChanging("InfinityDeadLine");
                _InfinityDeadLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfinityDeadLine");
                OnInfinityDeadLineChanged();
            }
        }
        private global::System.Boolean _InfinityDeadLine;
        partial void OnInfinityDeadLineChanging(global::System.Boolean value);
        partial void OnInfinityDeadLineChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "TaskStage", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.TaskStage", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.TaskStage", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.TaskStage", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("Context.TaskStage", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "PerfomerStage", "Perfomer")]
        public Perfomer Perfomer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perfomer>("Context.PerfomerStage", "Perfomer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perfomer>("Context.PerfomerStage", "Perfomer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Perfomer> PerfomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Perfomer>("Context.PerfomerStage", "Perfomer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Perfomer>("Context.PerfomerStage", "Perfomer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="StartProcess")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StartProcess : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StartProcess object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="pathToApp">Initial value of the PathToApp property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="idUser">Initial value of the IdUser property.</param>
        /// <param name="trackState">Initial value of the TrackState property.</param>
        public static StartProcess CreateStartProcess(global::System.Int32 id, global::System.String caption, global::System.String pathToApp, global::System.Boolean active, global::System.Int32 idUser, global::System.Boolean trackState)
        {
            StartProcess startProcess = new StartProcess();
            startProcess.ID = id;
            startProcess.Caption = caption;
            startProcess.PathToApp = pathToApp;
            startProcess.Active = active;
            startProcess.IdUser = idUser;
            startProcess.TrackState = trackState;
            return startProcess;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PathToApp
        {
            get
            {
                return _PathToApp;
            }
            set
            {
                OnPathToAppChanging(value);
                ReportPropertyChanging("PathToApp");
                _PathToApp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PathToApp");
                OnPathToAppChanged();
            }
        }
        private global::System.String _PathToApp;
        partial void OnPathToAppChanging(global::System.String value);
        partial void OnPathToAppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUser
        {
            get
            {
                return _IdUser;
            }
            set
            {
                OnIdUserChanging(value);
                ReportPropertyChanging("IdUser");
                _IdUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUser");
                OnIdUserChanged();
            }
        }
        private global::System.Int32 _IdUser;
        partial void OnIdUserChanging(global::System.Int32 value);
        partial void OnIdUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TrackState
        {
            get
            {
                return _TrackState;
            }
            set
            {
                OnTrackStateChanging(value);
                ReportPropertyChanging("TrackState");
                _TrackState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackState");
                OnTrackStateChanged();
            }
        }
        private global::System.Boolean _TrackState;
        partial void OnTrackStateChanging(global::System.Boolean value);
        partial void OnTrackStateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="openDate">Initial value of the OpenDate property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="typeTask">Initial value of the TypeTask property.</param>
        /// <param name="priorityTask">Initial value of the PriorityTask property.</param>
        /// <param name="isDelete">Initial value of the IsDelete property.</param>
        /// <param name="creater">Initial value of the Creater property.</param>
        /// <param name="isPersonal">Initial value of the IsPersonal property.</param>
        /// <param name="idProject">Initial value of the IdProject property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Task CreateTask(global::System.Int32 id, global::System.String text, global::System.DateTime openDate, global::System.String caption, global::System.Int32 typeTask, global::System.Int32 priorityTask, global::System.Boolean isDelete, global::System.Int32 creater, global::System.Boolean isPersonal, global::System.Int32 idProject, global::System.DateTime endDate)
        {
            Task task = new Task();
            task.ID = id;
            task.Text = text;
            task.OpenDate = openDate;
            task.Caption = caption;
            task.TypeTask = typeTask;
            task.PriorityTask = priorityTask;
            task.IsDelete = isDelete;
            task.Creater = creater;
            task.IsPersonal = isPersonal;
            task.IdProject = idProject;
            task.EndDate = endDate;
            return task;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OpenDate
        {
            get
            {
                return _OpenDate;
            }
            set
            {
                OnOpenDateChanging(value);
                ReportPropertyChanging("OpenDate");
                _OpenDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenDate");
                OnOpenDateChanged();
            }
        }
        private global::System.DateTime _OpenDate;
        partial void OnOpenDateChanging(global::System.DateTime value);
        partial void OnOpenDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeTask
        {
            get
            {
                return _TypeTask;
            }
            set
            {
                OnTypeTaskChanging(value);
                ReportPropertyChanging("TypeTask");
                _TypeTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeTask");
                OnTypeTaskChanged();
            }
        }
        private global::System.Int32 _TypeTask;
        partial void OnTypeTaskChanging(global::System.Int32 value);
        partial void OnTypeTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityTask
        {
            get
            {
                return _PriorityTask;
            }
            set
            {
                OnPriorityTaskChanging(value);
                ReportPropertyChanging("PriorityTask");
                _PriorityTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityTask");
                OnPriorityTaskChanged();
            }
        }
        private global::System.Int32 _PriorityTask;
        partial void OnPriorityTaskChanging(global::System.Int32 value);
        partial void OnPriorityTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Creater
        {
            get
            {
                return _Creater;
            }
            set
            {
                OnCreaterChanging(value);
                ReportPropertyChanging("Creater");
                _Creater = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creater");
                OnCreaterChanged();
            }
        }
        private global::System.Int32 _Creater;
        partial void OnCreaterChanging(global::System.Int32 value);
        partial void OnCreaterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private Nullable<global::System.Int32> _Group;
        partial void OnGroupChanging(Nullable<global::System.Int32> value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPersonal
        {
            get
            {
                return _IsPersonal;
            }
            set
            {
                OnIsPersonalChanging(value);
                ReportPropertyChanging("IsPersonal");
                _IsPersonal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPersonal");
                OnIsPersonalChanged();
            }
        }
        private global::System.Boolean _IsPersonal;
        partial void OnIsPersonalChanging(global::System.Boolean value);
        partial void OnIsPersonalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProject
        {
            get
            {
                return _IdProject;
            }
            set
            {
                OnIdProjectChanging(value);
                ReportPropertyChanging("IdProject");
                _IdProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProject");
                OnIdProjectChanged();
            }
        }
        private global::System.Int32 _IdProject;
        partial void OnIdProjectChanging(global::System.Int32 value);
        partial void OnIdProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeExecution
        {
            get
            {
                return _TypeExecution;
            }
            set
            {
                OnTypeExecutionChanging(value);
                ReportPropertyChanging("TypeExecution");
                _TypeExecution = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeExecution");
                OnTypeExecutionChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeExecution;
        partial void OnTypeExecutionChanging(Nullable<global::System.Int32> value);
        partial void OnTypeExecutionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_Favorite", "Favorites")]
        public EntityCollection<Favorite> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("Context.Task_Favorite", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("Context.Task_Favorite", "Favorites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_Perfomer", "Perfomers")]
        public EntityCollection<Perfomer> Perfomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Perfomer>("Context.Task_Perfomer", "Perfomers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Perfomer>("Context.Task_Perfomer", "Perfomers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Project_Task", "Projects")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Context.Project_Task", "Projects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Context.Project_Task", "Projects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("Context.Project_Task", "Projects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("Context.Project_Task", "Projects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_TaskComment", "TaskComments")]
        public EntityCollection<TaskComment> TaskComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskComment>("Context.Task_TaskComment", "TaskComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskComment>("Context.Task_TaskComment", "TaskComments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_TaskFile", "TaskFiles")]
        public EntityCollection<TaskFile> TaskFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskFile>("Context.Task_TaskFile", "TaskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskFile>("Context.Task_TaskFile", "TaskFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Task", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Task", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Task", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_Task", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_Task", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "TaskStage", "Stage")]
        public EntityCollection<Stage> Stages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stage>("Context.TaskStage", "Stage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stage>("Context.TaskStage", "Stage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="TaskComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskComment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDUser">Initial value of the IDUser property.</param>
        /// <param name="commentary">Initial value of the Commentary property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="isDelete">Initial value of the IsDelete property.</param>
        /// <param name="idTask">Initial value of the IdTask property.</param>
        /// <param name="typeCommentary">Initial value of the TypeCommentary property.</param>
        public static TaskComment CreateTaskComment(global::System.Int32 id, global::System.Int32 iDUser, global::System.String commentary, global::System.DateTime createDate, global::System.Boolean isDelete, global::System.Int32 idTask, global::System.Int32 typeCommentary)
        {
            TaskComment taskComment = new TaskComment();
            taskComment.ID = id;
            taskComment.IDUser = iDUser;
            taskComment.Commentary = commentary;
            taskComment.CreateDate = createDate;
            taskComment.IsDelete = isDelete;
            taskComment.IdTask = idTask;
            taskComment.TypeCommentary = typeCommentary;
            return taskComment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUser
        {
            get
            {
                return _IDUser;
            }
            set
            {
                OnIDUserChanging(value);
                ReportPropertyChanging("IDUser");
                _IDUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDUser");
                OnIDUserChanged();
            }
        }
        private global::System.Int32 _IDUser;
        partial void OnIDUserChanging(global::System.Int32 value);
        partial void OnIDUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Commentary
        {
            get
            {
                return _Commentary;
            }
            set
            {
                OnCommentaryChanging(value);
                ReportPropertyChanging("Commentary");
                _Commentary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Commentary");
                OnCommentaryChanged();
            }
        }
        private global::System.String _Commentary;
        partial void OnCommentaryChanging(global::System.String value);
        partial void OnCommentaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTask
        {
            get
            {
                return _IdTask;
            }
            set
            {
                OnIdTaskChanging(value);
                ReportPropertyChanging("IdTask");
                _IdTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdTask");
                OnIdTaskChanged();
            }
        }
        private global::System.Int32 _IdTask;
        partial void OnIdTaskChanging(global::System.Int32 value);
        partial void OnIdTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeCommentary
        {
            get
            {
                return _TypeCommentary;
            }
            set
            {
                OnTypeCommentaryChanging(value);
                ReportPropertyChanging("TypeCommentary");
                _TypeCommentary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeCommentary");
                OnTypeCommentaryChanged();
            }
        }
        private global::System.Int32 _TypeCommentary;
        partial void OnTypeCommentaryChanging(global::System.Int32 value);
        partial void OnTypeCommentaryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_TaskComment", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_TaskComment", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_TaskComment", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_TaskComment", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("Context.Task_TaskComment", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_TaskComment", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_TaskComment", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_TaskComment", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_TaskComment", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_TaskComment", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="TaskFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskFile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="idTask">Initial value of the IdTask property.</param>
        /// <param name="originalName">Initial value of the OriginalName property.</param>
        /// <param name="storeName">Initial value of the StoreName property.</param>
        /// <param name="isComment">Initial value of the IsComment property.</param>
        /// <param name="idCommentary">Initial value of the IdCommentary property.</param>
        /// <param name="addUser">Initial value of the AddUser property.</param>
        public static TaskFile CreateTaskFile(global::System.Int32 id, global::System.Int32 idTask, global::System.String originalName, global::System.String storeName, global::System.Boolean isComment, global::System.Int32 idCommentary, global::System.Int32 addUser)
        {
            TaskFile taskFile = new TaskFile();
            taskFile.ID = id;
            taskFile.IdTask = idTask;
            taskFile.OriginalName = originalName;
            taskFile.StoreName = storeName;
            taskFile.IsComment = isComment;
            taskFile.IdCommentary = idCommentary;
            taskFile.AddUser = addUser;
            return taskFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdTask
        {
            get
            {
                return _IdTask;
            }
            set
            {
                OnIdTaskChanging(value);
                ReportPropertyChanging("IdTask");
                _IdTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdTask");
                OnIdTaskChanged();
            }
        }
        private global::System.Int32 _IdTask;
        partial void OnIdTaskChanging(global::System.Int32 value);
        partial void OnIdTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalName
        {
            get
            {
                return _OriginalName;
            }
            set
            {
                OnOriginalNameChanging(value);
                ReportPropertyChanging("OriginalName");
                _OriginalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OriginalName");
                OnOriginalNameChanged();
            }
        }
        private global::System.String _OriginalName;
        partial void OnOriginalNameChanging(global::System.String value);
        partial void OnOriginalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreName
        {
            get
            {
                return _StoreName;
            }
            set
            {
                OnStoreNameChanging(value);
                ReportPropertyChanging("StoreName");
                _StoreName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoreName");
                OnStoreNameChanged();
            }
        }
        private global::System.String _StoreName;
        partial void OnStoreNameChanging(global::System.String value);
        partial void OnStoreNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsComment
        {
            get
            {
                return _IsComment;
            }
            set
            {
                OnIsCommentChanging(value);
                ReportPropertyChanging("IsComment");
                _IsComment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsComment");
                OnIsCommentChanged();
            }
        }
        private global::System.Boolean _IsComment;
        partial void OnIsCommentChanging(global::System.Boolean value);
        partial void OnIsCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCommentary
        {
            get
            {
                return _IdCommentary;
            }
            set
            {
                OnIdCommentaryChanging(value);
                ReportPropertyChanging("IdCommentary");
                _IdCommentary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdCommentary");
                OnIdCommentaryChanged();
            }
        }
        private global::System.Int32 _IdCommentary;
        partial void OnIdCommentaryChanging(global::System.Int32 value);
        partial void OnIdCommentaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddUser
        {
            get
            {
                return _AddUser;
            }
            set
            {
                OnAddUserChanging(value);
                ReportPropertyChanging("AddUser");
                _AddUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddUser");
                OnAddUserChanged();
            }
        }
        private global::System.Int32 _AddUser;
        partial void OnAddUserChanging(global::System.Int32 value);
        partial void OnAddUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Task_TaskFile", "Tasks")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_TaskFile", "Tasks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_TaskFile", "Tasks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("Context.Task_TaskFile", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("Context.Task_TaskFile", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_TaskFile", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_TaskFile", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_TaskFile", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Context.User_TaskFile", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Context.User_TaskFile", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="TrackingState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrackingState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrackingState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="idObject">Initial value of the IdObject property.</param>
        /// <param name="idUser">Initial value of the IdUser property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static TrackingState CreateTrackingState(global::System.Int32 id, global::System.Int32 idObject, global::System.Int32 idUser, global::System.Int32 type)
        {
            TrackingState trackingState = new TrackingState();
            trackingState.Id = id;
            trackingState.IdObject = idObject;
            trackingState.IdUser = idUser;
            trackingState.Type = type;
            return trackingState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdObject
        {
            get
            {
                return _IdObject;
            }
            set
            {
                OnIdObjectChanging(value);
                ReportPropertyChanging("IdObject");
                _IdObject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdObject");
                OnIdObjectChanged();
            }
        }
        private global::System.Int32 _IdObject;
        partial void OnIdObjectChanging(global::System.Int32 value);
        partial void OnIdObjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUser
        {
            get
            {
                return _IdUser;
            }
            set
            {
                OnIdUserChanging(value);
                ReportPropertyChanging("IdUser");
                _IdUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUser");
                OnIdUserChanged();
            }
        }
        private global::System.Int32 _IdUser;
        partial void OnIdUserChanging(global::System.Int32 value);
        partial void OnIdUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Context", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="idRole">Initial value of the IdRole property.</param>
        /// <param name="idSetting">Initial value of the IdSetting property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="isDelete">Initial value of the IsDelete property.</param>
        /// <param name="language">Initial value of the Language property.</param>
        /// <param name="ipAdress">Initial value of the IpAdress property.</param>
        /// <param name="isHiddenUser">Initial value of the IsHiddenUser property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.Int32 idRole, global::System.Int32 idSetting, global::System.String fullName, global::System.Boolean isDelete, global::System.String language, global::System.String ipAdress, global::System.Boolean isHiddenUser)
        {
            User user = new User();
            user.ID = id;
            user.UserName = userName;
            user.Password = password;
            user.IdRole = idRole;
            user.IdSetting = idSetting;
            user.FullName = fullName;
            user.IsDelete = isDelete;
            user.Language = language;
            user.IpAdress = ipAdress;
            user.IsHiddenUser = isHiddenUser;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdRole
        {
            get
            {
                return _IdRole;
            }
            set
            {
                OnIdRoleChanging(value);
                ReportPropertyChanging("IdRole");
                _IdRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdRole");
                OnIdRoleChanged();
            }
        }
        private global::System.Int32 _IdRole;
        partial void OnIdRoleChanging(global::System.Int32 value);
        partial void OnIdRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdSetting
        {
            get
            {
                return _IdSetting;
            }
            set
            {
                OnIdSettingChanging(value);
                ReportPropertyChanging("IdSetting");
                _IdSetting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdSetting");
                OnIdSettingChanged();
            }
        }
        private global::System.Int32 _IdSetting;
        partial void OnIdSettingChanging(global::System.Int32 value);
        partial void OnIdSettingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDelete
        {
            get
            {
                return _IsDelete;
            }
            set
            {
                OnIsDeleteChanging(value);
                ReportPropertyChanging("IsDelete");
                _IsDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDelete");
                OnIsDeleteChanged();
            }
        }
        private global::System.Boolean _IsDelete;
        partial void OnIsDeleteChanging(global::System.Boolean value);
        partial void OnIsDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Language
        {
            get
            {
                return _Language;
            }
            set
            {
                OnLanguageChanging(value);
                ReportPropertyChanging("Language");
                _Language = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Language");
                OnLanguageChanged();
            }
        }
        private global::System.String _Language;
        partial void OnLanguageChanging(global::System.String value);
        partial void OnLanguageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IpAdress
        {
            get
            {
                return _IpAdress;
            }
            set
            {
                OnIpAdressChanging(value);
                ReportPropertyChanging("IpAdress");
                _IpAdress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IpAdress");
                OnIpAdressChanged();
            }
        }
        private global::System.String _IpAdress;
        partial void OnIpAdressChanging(global::System.String value);
        partial void OnIpAdressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHiddenUser
        {
            get
            {
                return _IsHiddenUser;
            }
            set
            {
                OnIsHiddenUserChanging(value);
                ReportPropertyChanging("IsHiddenUser");
                _IsHiddenUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHiddenUser");
                OnIsHiddenUserChanged();
            }
        }
        private global::System.Boolean _IsHiddenUser;
        partial void OnIsHiddenUserChanging(global::System.Boolean value);
        partial void OnIsHiddenUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Favorite", "Favorites")]
        public EntityCollection<Favorite> Favorites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Favorite>("Context.User_Favorite", "Favorites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Favorite>("Context.User_Favorite", "Favorites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_GlobalHookKey", "GlobalHookKey")]
        public EntityCollection<GlobalHookKey> GlobalHookKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalHookKey>("Context.User_GlobalHookKey", "GlobalHookKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalHookKey>("Context.User_GlobalHookKey", "GlobalHookKey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Note", "Note")]
        public EntityCollection<Note> Notes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Note>("Context.User_Note", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Note>("Context.User_Note", "Note", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Perfomer", "Perfomers")]
        public EntityCollection<Perfomer> Perfomers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Perfomer>("Context.User_Perfomer", "Perfomers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Perfomer>("Context.User_Perfomer", "Perfomers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Role_User", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Context.Role_User", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Context.Role_User", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Context.Role_User", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("Context.Role_User", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "Setting_User", "Settings")]
        public Setting Setting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Setting>("Context.Setting_User", "Settings").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Setting>("Context.Setting_User", "Settings").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Setting> SettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Setting>("Context.Setting_User", "Settings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Setting>("Context.Setting_User", "Settings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_TaskComment", "TaskComments")]
        public EntityCollection<TaskComment> TaskComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskComment>("Context.User_TaskComment", "TaskComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskComment>("Context.User_TaskComment", "TaskComments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_TaskFile", "TaskFiles")]
        public EntityCollection<TaskFile> TaskFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskFile>("Context.User_TaskFile", "TaskFiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskFile>("Context.User_TaskFile", "TaskFiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_Task", "Tasks")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("Context.User_Task", "Tasks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("Context.User_Task", "Tasks", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Context", "User_NoteGroup", "NoteGroup")]
        public EntityCollection<NoteGroup> NoteGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NoteGroup>("Context.User_NoteGroup", "NoteGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NoteGroup>("Context.User_NoteGroup", "NoteGroup", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
