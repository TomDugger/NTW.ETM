<UserControl x:Class="NTW.Controls.EditableTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NTW.Controls"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:bc="clr-namespace:NTW.Controls.Behaviours"
             xmlns:c="clr-namespace:NTW.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400">
    <UserControl.Resources>
        <SolidColorBrush x:Key="BackColor" Color="{DynamicResource FBackColor}" />
        
        <Style TargetType="{x:Type Run}">
            <EventSetter Event="ContextMenuOpening" Handler="TableCell_ContextMenuOpening" />
            <Setter Property="ContextMenu" >
                <Setter.Value>
                    <ContextMenu >
                        <MenuItem Header="Font" />
                        <MenuItem Header="Paragraph" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type TableCell}">
            <EventSetter Event="ContextMenuOpening" Handler="TableCell_ContextMenuOpening" />
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu >
                        <MenuItem Header="Insert" >
                            <MenuItem Header="Columns left" Command="{x:Static local:EditableTextBox.AddColumnLeftCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                            <MenuItem Header="Columns right" Command="{x:Static local:EditableTextBox.AddColumnRightCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                            <Separator />
                            <MenuItem Header="Row top" Command="{x:Static local:EditableTextBox.AddRowTopCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                            <MenuItem Header="Row bottom" Command="{x:Static local:EditableTextBox.AddRowBottomCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Remove" >
                            <MenuItem Header="Fill row" Command="{x:Static local:EditableTextBox.RemoveFillRowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                            <MenuItem Header="Fill column" Command="{x:Static local:EditableTextBox.RemoveFillColumnCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                        </MenuItem>
                        <MenuItem Header="Split" IsEnabled="False" Command="{x:Static local:EditableTextBox.SplitCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                        <Separator />
                        <MenuItem Header="Remove Table" Command="{x:Static local:EditableTextBox.RemoveTableCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}, Path=Tag}" />
                        <Separator />
                        <MenuItem Header="Property cell" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Image}">
            <EventSetter Event="ContextMenuOpening" Handler="TableCell_ContextMenuOpening" />
            <Setter Property="ContextMenu" >
                <Setter.Value>
                    <ContextMenu >
                        <MenuItem Header="Size" />
                        <MenuItem Header="Margin" />
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Popup}">
            <Setter Property="Placement" Value="Top" />
        </Style>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="7" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <ToolBar Name="EditPanel">
            <Grid Name="ControlFilePanel">
                <ToggleButton Content="Files" Name="ActFilesPanel" Height="30" Width="30" Checked="ActFontPanel_Checked" />
                <Popup IsOpen="{Binding ElementName=ActFilesPanel, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="True" MinWidth="100">
                    <Border>
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="30" />
                                <RowDefinition Height="30" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="Files" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />

                            <Button Grid.Row="1" Content="Save" Click="SaveDocument" />
                            <Button Grid.Row="2" Content="Load" Click="LoadedDocument" />
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
            <Grid Name="FontTextPanel">
                <ToggleButton Content="Font" Name="ActFontPanel" Width="30" Checked="ActFontPanel_Checked" />
                <Popup IsOpen="{Binding ElementName=ActFontPanel, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="True" MinWidth="100">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Text="Font" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <WrapPanel Grid.Row="1" Orientation="Horizontal">
                            <ToggleButton Command="EditingCommands.ToggleBold" Content="B" Width="30" Focusable="False" Name="btnBold" />
                            <ToggleButton Command="EditingCommands.ToggleItalic" Content="I" Width="30" Focusable="False" Name="btnItalic" />
                            <ToggleButton Command="EditingCommands.ToggleUnderline" Content="U" Width="30" Focusable="False" Name="btnUnderline" />
                        </WrapPanel>

                        <WrapPanel Grid.Row="2" Orientation="Horizontal">
                            <ComboBox MinWidth="100" Focusable="False" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=FontsCollection, IsAsync=True}" SelectionChanged="cmbFontFamily_SelectionChanged" Name="cmbFontFamily" >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=.}" FontFamily="{Binding Path=.}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel  />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <ComboBox  Width="50" IsEditable="True" Focusable="False" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=SizeCollection}" TextBoxBase.TextChanged="cmbFontSize_TextChanged" Name="cmbFontSize" >
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </WrapPanel>
                        
                        <WrapPanel Grid.Row="3" Orientation="Horizontal">
                            
                        </WrapPanel>
                    </Grid>
                </Popup>
            </Grid>
            <Grid Name="AligenmentTextPanel">
                <ToggleButton Content="Alignment text" Name="ActAlignmentTextPanel" Width="30" Checked="ActFontPanel_Checked" />
                <Popup IsOpen="{Binding ElementName=ActAlignmentTextPanel, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="True" MinWidth="100">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Paragraph" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <WrapPanel Grid.Row="1">
                            <ToggleButton Command="EditingCommands.AlignLeft" Content="&lt;-" Width="30" Focusable="False" Name="btnAlignLeft" Checked="btnAlignLeft_Checked" />
                            <ToggleButton Command="EditingCommands.AlignCenter" Content="&gt;-&lt;" Width="30" Focusable="False" Name="btnAlignCenter" Checked="btnAlignLeft_Checked" />
                            <ToggleButton Command="EditingCommands.AlignRight" Content="&gt;-" Width="30" Focusable="False" Name="btnAlignRight" Checked="btnAlignLeft_Checked" />
                            <ToggleButton Command="EditingCommands.AlignJustify" Content="&lt;-&gt;" Width="30" Focusable="False" Name="btnAlignJustify" Checked="btnAlignLeft_Checked" />
                        </WrapPanel>
                    </Grid>
                </Popup>
            </Grid>
            <Grid Name="PageSizePanel">
                <ToggleButton Content="Page size" Name="ActPageSizePanel" Width="30" Checked="ActFontPanel_Checked" />
                <Popup IsOpen="{Binding ElementName=ActPageSizePanel, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="True" MinWidth="100">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Page" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <WrapPanel Grid.Row="1">
                            <TextBlock Text="Size:" VerticalAlignment="Center" />
                            <TextBox Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=PageWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Text="X" VerticalAlignment="Center" />
                            <TextBox Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=PageHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <ComboBox Focusable="False" Width="90" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=PageFormats}" />
                        </WrapPanel>
                    </Grid>
                </Popup>
            </Grid>
            <Grid Name="PrimitivyObjectPanel">
                <ToggleButton Content="Primitivy" Name="ActPrimitivyPanel" Width="30" Checked="ActFontPanel_Checked" />
                <Popup IsOpen="{Binding ElementName=ActPrimitivyPanel, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="True" MinWidth="100" MinHeight="100">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Table" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="22" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=Present.X, UpdateSourceTrigger=PropertyChanged}" Foreground="White"  />
                                <TextBlock Text="x" Foreground="White"  />
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=Present.Y, UpdateSourceTrigger=PropertyChanged}" Foreground="White"  />
                            </StackPanel>
                            <ItemsControl Grid.Row="1" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=TableSample, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="Grid.Row" Value="{Binding Path=X}" />
                                        <Setter Property="Grid.Column" Value="{Binding Path=Y}" />
                                    </Style>
                                </ItemsControl.ItemContainerStyle>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border BorderBrush="DodgerBlue" BorderThickness="1" >
                                            <Border.InputBindings>
                                                <MouseBinding Gesture="LeftClick" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=CreateTableCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding Path=.}" />
                                            </Border.InputBindings>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseEnter" >
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=MouseOverTableCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding Path=.}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=State, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                            <Setter Property="Background" Value="Red" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0" />
                                                <RowDefinition Height="16" />
                                                <RowDefinition Height="16" />
                                                <RowDefinition Height="16" />
                                                <RowDefinition Height="16" />

                                                <RowDefinition Height="16" />
                                                <RowDefinition Height="16" />
                                                <RowDefinition Height="16" />
                                                <RowDefinition Height="16" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="16" />

                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="16" />
                                            </Grid.ColumnDefinitions>
                                        </Grid>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeave" >
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=MouseLeaveTableCommand, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding Path=.}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ItemsControl>
                            <!--<TextBlock Text="Columns:" Margin="5, 0" VerticalAlignment="Center" />
                            <TextBox Focusable="True" VerticalAlignment="Center" Width="30"
                                 Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=CountColumnsTable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Button Content="Table" Click="CreateTable" Focusable="False" />-->
                        </Grid>
                    </Grid>
                </Popup>
            </Grid>
            <Grid Name="ObjectControlPanel">
                <ToggleButton Content="Object" Name="ActObjectPanel" Width="30" Checked="ActFontPanel_Checked" />
                <Popup IsOpen="{Binding ElementName=ActObjectPanel, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="True" MinWidth="100">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Object" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <WrapPanel Grid.Row="1">
                            <Button Content="Image" Focusable="False" Click="AddImage" />
                            <Button Content="Hyperlink" Click="HiperLink" />
                        </WrapPanel>
                    </Grid>
                </Popup>
            </Grid>
            <Grid Name="MarkerPanel">
                <ToggleButton Content="Marker" Name="ActMarkerPanel" Width="30" Checked="ActFontPanel_Checked" />
                <Popup IsOpen="{Binding ElementName=ActMarkerPanel, Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" StaysOpen="True" MinWidth="100">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Text="List" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <WrapPanel Grid.Row="1">
                            <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=MarkerStyle}" SelectedValue="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=TypeMarkerText}" Focusable="False" >
                            </ComboBox>
                            <Button Width="30" Content="1.-" Focusable="False" Click="AddMarkerList" />
                        </WrapPanel>
                    </Grid>
                </Popup>
            </Grid>
        </ToolBar>

        <Button Grid.Row="1" Click="ShowHideEditPanel" >
            <TextBlock Text="-=-" />
        </Button>

        <RichTextBox Grid.Row="2" Name="EditablePanel" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" SelectionChanged="EditablePanel_SelectionChanged" ContextMenu="{x:Null}">
            <FlowDocument PageWidth="595" PageHeight="842" />
        </RichTextBox>
    </Grid>
</UserControl>
